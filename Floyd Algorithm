#include <stdio.h>
#include <limits.h>

#define V 4
#define INF INT_MAX

void printSolution(int dist[][V]) {
    printf("Shortest distances between every pair of vertices:\n");
	int i;
int j;
    for ( i = 0; i < V; i++) {
        for (j = 0; j < V; j++) {
            if (dist[i][j] == INF)
                printf("%7s", "INF");
            else
                printf("%7d", dist[i][j]);
        }
        printf("\n");
    }
}

void floydWarshall(int graph[][V]) {
    int dist[V][V];
int i;
int j;
  
    for ( i = 0; i < V; i++)
        for ( j = 0; j < V; j++)
            dist[i][j] = graph[i][j];

int k;
    for ( k = 0; k < V; k++) {
  
        for ( i = 0; i < V; i++) {
  
            for (j = 0; j < V; j++) {
          
                if (dist[i][k] != INF && dist[k][j] != INF &&
                    dist[i][k] + dist[k][j] < dist[i][j])
                    dist[i][j] = dist[i][k] + dist[k][j];
            }
        }
    }

    printSolution(dist);
}

int main() {

    int graph[V][V] = {
        {0, 3, INF, 7},
        {INF, 0, 2, INF},
        {INF, INF, 0, 1},
        {INF, INF, INF, 0}
    };


    floydWarshall(graph);
    return 0;
}
