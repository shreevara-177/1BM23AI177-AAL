#include <stdio.h>
#include <stdbool.h>

#define N 4  

void printSolution(int board[N][N]) {
	int i;
	int j;
    for ( i = 0; i < N; i++) {
        for (j = 0; j < N; j++)
            printf("%c ", board[i][j] ? 'Q' : '.');
        printf("\n");
    }
    printf("\n");
}
bool isSafe(int board[N][N], int row, int col) {
	int i;
	int j;
    for ( i = 0; i < col; i++)
        if (board[row][i])
            return false;
    for (i = row, j = col; i >= 0 && j >= 0; i--, j--)
        if (board[i][j])
            return false;
    for (i = row, j = col; i < N && j >= 0; i++, j--)
        if (board[i][j])
            return false;
    return true;
}
bool solveNQueens(int board[N][N], int col) {
    if (col >= N) {
        printSolution(board);
        return true;
    }
    bool res = false;
    int i;
    int count=0;
    for ( i = 0; i < N; i++) {
        if (isSafe(board, i, col)) {
            board[i][col] = 1;
            res = solveNQueens(board, col + 1) || res;
            board[i][col] = 0;
        }
    }
    return res;
    count=count+1;
 
    
}
int main() {
    int board[N][N] = {0};
    if (!solveNQueens(board, 0))
        printf("No solution exists.\n");
    return 0;
}
